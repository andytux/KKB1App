@page "/shows"
@using KKB1App.Data.Models
@using KKB1App.Data.ViewModels
@inject ShowService ShowService
@inject ProgramService ProgramService

<h3>Vorstellungen verwalten</h3>

@if (!string.IsNullOrEmpty(Message))
{
    <p style="color:@(IsSuccess ? "green" : "red")">@Message</p>
}

<div style="max-width: 600px; margin-bottom: 2rem;">
    <h4>Neue Vorstellung planen</h4>

    <div class="form-group mb-2">
        <label>Programm</label>
        <select class="form-control" @bind="NewShow.ProgramId">
            <option disabled selected value="">-- Programm wählen --</option>
            @foreach (var p in Programs)
            {
                <option value="@p.ProgramId">@p.Title</option>
            }
        </select>
    </div>

    <div class="form-group mb-2">
        <label>Datum und Uhrzeit</label>
        <input type="datetime-local" class="form-control" @bind="ShowDateTime" />
    </div>

    <div class="form-group mb-2">
        <label>Ticketpreis (€)</label>
        <input type="number" step="0.01" class="form-control" @bind="NewShow.TicketPrice" />
    </div>

    <div class="form-group mb-2">
        <label>Status</label>
        <input type="checkbox" @bind="NewShow.IsActive" /> Aktiv
    </div>

    <button class="btn btn-success" @onclick="AddShow">Vorstellung speichern</button>
</div>

<hr />

<h4>Geplante Vorstellungen</h4>

@if (AllShows == null)
{
    <p>Lade Vorstellungen...</p>
}
else if (AllShows.Count == 0)
{
    <p>Keine Vorstellungen geplant.</p>
}
else
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Programm</th>
                <th>Datum</th>
                <th>Preis</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var show in AllShows)
            {
                <tr>
                    <td>@show.ProgramTitle</td>
                    <td>@show.DateTime.ToString("g")</td>
                    <td>@show.TicketPrice €</td>
                    <td>@(show.IsActive ? "Aktiv" : "Inaktiv")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<ShowVM> AllShows = new();
    private List<Data.Models.Program> Programs = new();

    private ShowVM NewShow = new();
    private DateTime ShowDateTime = DateTime.Now;

    private string Message = string.Empty;
    private bool IsSuccess = false;

    protected override async Task OnInitializedAsync()
    {
        Programs = await ProgramService.GetAllProgramsAsync();
        await LoadShows();
    }

    private async Task LoadShows()
    {
        AllShows = await ShowService.GetAllShowsAsync();
    }

    private async Task AddShow()
    {
        var show = new Show
            {
                ProgramId = NewShow.ProgramId,
                DateTime = ShowDateTime,
                TicketPrice = NewShow.TicketPrice,
                IsActive = NewShow.IsActive
            };

        var success = await ShowService.AddShowAsync(show);

        if (success)
        {
            Message = "Vorstellung gespeichert.";
            IsSuccess = true;
            await LoadShows();
        }
        else
        {
            Message = "Fehler: Es existiert bereits eine Vorstellung zu diesem Zeitpunkt!";
            IsSuccess = false;
        }
    }
}
