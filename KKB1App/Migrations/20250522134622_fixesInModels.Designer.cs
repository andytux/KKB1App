// <auto-generated />
using System;
using KKB1App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KKB1App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250522134622_fixesInModels")]
    partial class fixesInModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KKB1App.Data.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"));

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("KKB1App.Data.Models.Program", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramId"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("PaymentMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProgramId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("KKB1App.Data.Models.Show", b =>
                {
                    b.Property<int>("ShowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowId"));

                    b.Property<DateTime>("DateEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ShowId");

                    b.HasIndex("DateStartTime")
                        .IsUnique();

                    b.HasIndex("ProgramId");

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("KKB1App.Data.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<int>("ShowId")
                        .HasColumnType("int");

                    b.Property<int>("TicketHolderId")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("TicketHolderId");

                    b.HasIndex("ShowId", "Row", "SeatNumber")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("KKB1App.Data.Models.TicketHolder", b =>
                {
                    b.Property<int>("TicketHolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketHolderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketHolderId");

                    b.ToTable("TicketHolders");
                });

            modelBuilder.Entity("KKB1App.Data.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KKB1App.Data.Models.Program", b =>
                {
                    b.HasOne("KKB1App.Data.Models.Artist", "Artist")
                        .WithMany("Programs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("KKB1App.Data.Models.Show", b =>
                {
                    b.HasOne("KKB1App.Data.Models.Program", "Program")
                        .WithMany("Shows")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("KKB1App.Data.Models.Ticket", b =>
                {
                    b.HasOne("KKB1App.Data.Models.Show", "Show")
                        .WithMany("Tickets")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KKB1App.Data.Models.TicketHolder", "TicketHolder")
                        .WithMany("Tickets")
                        .HasForeignKey("TicketHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Show");

                    b.Navigation("TicketHolder");
                });

            modelBuilder.Entity("KKB1App.Data.Models.Artist", b =>
                {
                    b.Navigation("Programs");
                });

            modelBuilder.Entity("KKB1App.Data.Models.Program", b =>
                {
                    b.Navigation("Shows");
                });

            modelBuilder.Entity("KKB1App.Data.Models.Show", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("KKB1App.Data.Models.TicketHolder", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
